// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:
	RAM4K (in=in, load=r00, address=address[0..11], out=rout0);
	RAM4K (in=in, load=r01, address=address[0..11], out=rout1);
	RAM4K (in=in, load=r02, address=address[0..11], out=rout2);
	RAM4K (in=in, load=r03, address=address[0..11], out=rout3);

	//select which output based on selected Register
	Mux4Way16 (a=rout0, b=rout1, c=rout2, d=rout3, sel=address[12..13], out=out);
	
	//make address selection, put a 1 (true) on the selected register, use address, to simulate select
	DMux4Way (in=load, sel=address[12..13], a=r00, b=r01, c=r02, d=r03);

}